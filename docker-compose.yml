x-postgres-common: &x-postgres-common
  image: bitnami/postgresql
  restart: always
  healthcheck:
    test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
    interval: 1m30s
    timeout: 30s
    retries: 5
    start_period: 30s

services:
  master:
    <<: *x-postgres-common
    ports:
      - "5433:5432"
    env_file:
      - .env
    environment:
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_PGAUDIT_LOG=READ,WRITE
      - POSTGRESQL_USERNAME=${POSTGRES_USER?Variable not set}
      - POSTGRESQL_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRESQL_REPLICATION_USER=replicator
      - POSTGRESQL_REPLICATION_PASSWORD=replicator
      - POSTGRESQL_DATABASE=${POSTGRES_DB?Variable not set}
      - ALLOW_EMPTY_PASSWORD=yes

  slave:
    <<: *x-postgres-common
    ports:
      - "5434:5432"
    environment:
      - POSTGRESQL_MASTER_HOST=master
      - POSTGRESQL_PGAUDIT_LOG=READ
      - POSTGRESQL_LOG_HOSTNAME=true
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRESQL_REPLICATION_USER=replicator
      - POSTGRESQL_REPLICATION_PASSWORD=replicator
      - POSTGRESQL_MASTER_PORT_NUMBER=5432
      - ALLOW_EMPTY_PASSWORD=yes
    depends_on:
      master:
        condition: service_healthy

  pgpool:
    image: bitnami/pgpool:latest
    restart: always
    ports:
      - "5435:5432"
    environment:
      - PGPOOL_BACKEND_NODES=0:master:5432,1:slave:5432
      - PGPOOL_SR_CHECK_USER=${POSTGRES_USER?Variable not set}
      - PGPOOL_SR_CHECK_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - PGPOOL_ENABLE_LDAP=no
      - PGPOOL_POSTGRES_USERNAME=${POSTGRES_USER?Variable not set}
      - PGPOOL_POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - PGPOOL_ADMIN_USERNAME=admin
      - PGPOOL_ADMIN_PASSWORD=qwertyjk
    healthcheck:
      test: [ "CMD", "/opt/bitnami/scripts/pgpool/healthcheck.sh" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      slave:
        condition: service_healthy
